postgresql://[user[:password]@][netloc][:port][/dbname][?param1=value1&...]

export CONNECTION_URL="postgresql://postgres:password@localhost:5432/cruddur"
gp env CONNECTION_URL="postgresql://postgres:password@localhost:5432/cruddur"



NO_DB_CONNECTION_URL=$(sed ''s//\cruddur//g' <<< "$CONNECTION_URL")

export DB_SG_ID="sg-0cf271fbb82eb823c"
gp env DB_SG_ID="sg-0cf271fbb82eb823c"
export DB_SG_RULE_ID="sgr-03e2c7d84b2b6739f"
gp env DB_SG_RULE_ID="sgr-03e2c7d84b2b6739f"


aws ec2 modify-security-group-rules \
    --group-id $DB_SG_ID \
    --security-group-rules "SecurityGroupRuleId=$DB_SG_RULE_ID,SecurityGroupRule={IpProtocol=tcp,FromPort=5432,ToPort=5432,CidrIpv4=$GITPOD_IP/32}"

 git tag weekX
  
git push origin --tags





    environment:
      #AWS_ENDPOINT_URL: "http://dynamodb-local:8000"
      FRONTEND_URL: "https://3000-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
      BACKEND_URL: "https://4567-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
      OTEL_SERVICE_NAME: "backend-flask"
      OTEL_EXPORTER_OTLP_ENDPOINT: "https://api.honeycomb.io"
      OTEL_EXPORTER_OTLP_HEADERS: "x-honeycomb-team=${HONEYCOMB_API_KEY}"   
      AWS_XRAY_URL: "*4567-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}*"
      AWS_XRAY_DAEMON_ADDRESS: "xray-daemon:2000"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      ROLLBAR_ACCESS_TOKEN: "${ROLLBAR_ACCESS_TOKEN}"
      AWS_COGNITO_USER_POOL_ID: "ca-central-1_9bybsRR0y"
      AWS_COGNITO_USER_POOL_CLIENT_ID: "25k5n7dea5c4ggftb7o762aatq"
      CONNECTION_URL: "postgresql://postgres:password@db:5432/cruddur"
      #CONNECTION_URL: "${PROD_CONNECTION_URL}"
    build: ./backend-flask

    environment:
      REACT_APP_BACKEND_URL: "https://4567-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}"
      REACT_APP_AWS_PROJECT_REGION: "${AWS_DEFAULT_REGION}"
      REACT_APP_AWS_COGNITO_REGION: "${AWS_DEFAULT_REGION}"
      REACT_APP_AWS_USER_POOLS_ID: "ca-central-1_9bybsRR0y"
      REACT_APP_CLIENT_ID: "25k5n7dea5c4ggftb7o762aatq"

Notes: 

giptpod.yml file re open workspace, "$THEIA_WORKSPACE_ROOT/bin/rds/update-sg-rule" is not executed properly because of aws reinstall.

      Testing in local env.

      1. ./bin/ecr/login
      2. docker-compose.yml
      3. ./bin/db/setup
      4. ./bin/ddb/setup if required
   

when there are two message groups, switch message group does not load all messages. need to go back to message menu.
docker folder does not ignore in the github.

      

Testing in Cloud env.
0. Test RDS Connection
1. ./bin/ecr/login
2. Build
3. push
4. register
5. deploy
6. stop the service 